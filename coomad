Get-WinEvent -LogName "Microsoft-Windows-GroupPolicy/Operational" | Where-Object { $_.Message -match "Zoom" } | Select-Object TimeCreated, Message


Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" | Where-Object { $_.DisplayName -match "Zoom" } | Select-Object DisplayName, InstallSource, InstallLocation, Publisher


PS C:\> Get-WinEvent -LogName "Microsoft-Windows-GroupPolicy/Operational" | Where-Object { $_.Message -match "Zoom" } | Select-Object TimeCreated, Message
PS C:\> Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" | Where-Object { $_.DisplayName -match "Zoom" } | Select-Object DisplayName, InstallSource, InstallLocation, Publisher

DisplayName                 InstallSource                                               InstallLocation Publisher
-----------                 -------------                                               --------------- ---------
Zoom Workplace (64-bit)     C:\Program Files (x86)\CyberCNSAgent\patch_agent_temp\                      Zoom
Zoom VDI Workplace (64-bit) C:\Windows\system32\config\systemprofile\AppData\Local\mdm\                 Zoom Communications, Inc



# Check for Group Policy software installation events (Event ID 1033)
Get-WinEvent -LogName Application -FilterXPath "*[System[EventID=1033]]" | 
    Where-Object {$_.Message -like "*Zoom*"} | 
    Format-List TimeCreated, Id, Message

# More comprehensive search for any MSI installer events related to Zoom
Get-WinEvent -LogName Application | 
    Where-Object { $_.Id -in (1033, 1034, 11707, 11724) -and $_.Message -like "*Zoom*" } |
    Select-Object TimeCreated, Id, LevelDisplayName, Message




# Comprehensive search for Zoom installations
Write-Host "=== Searching for Zoom installations ===" -ForegroundColor Green

# Check common installation directories
$zoomPaths = @(
    "$env:ProgramFiles\Zoom",
    "${env:ProgramFiles(x86)}\Zoom",
    "$env:LOCALAPPDATA\Zoom",
    "$env:APPDATA\Zoom",
    "$env:PROGRAMDATA\Zoom"
)

foreach ($path in $zoomPaths) {
    if (Test-Path $path) {
        Write-Host "FOUND: Zoom in $path" -ForegroundColor Red
        Get-ChildItem $path -Recurse -Depth 1 | Select-Object Name, LastWriteTime | Format-Table
    }
}

# Check registry for Zoom installations
Write-Host "`n=== Checking Registry for Zoom ===" -ForegroundColor Green
$registryPaths = @(
    "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*",
    "HKLM:\SOFTWARE\Zoom",
    "HKCU:\SOFTWARE\Zoom"
)

foreach ($regPath in $registryPaths) {
    if (Test-Path $regPath) {
        Get-ItemProperty $regPath -ErrorAction SilentlyContinue | 
            Where-Object { $_.PSChildName -like "*Zoom*" -or $_.DisplayName -like "*Zoom*" } |
            Select-Object DisplayName, Publisher, InstallDate, DisplayVersion, PSPath
    }
}
